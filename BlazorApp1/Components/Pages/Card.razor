@page "/card"
@inject HttpClient httpClient
@rendermode InteractiveServer
@inject ILogger<Card> Logger

<form>
    <label for="cardHolderName">Card Holder Name:</label>
    <input type="text" id="cardHolderName" @bind="@CardHolderName" />

    <label for="cardNumber">Card Number:</label>
    <input type="text" id="cardNumber" @bind="@CardNumber" />

    <label for="expiryDate">Expiry Date:</label>
    <input type="text" id="expiryDate" @bind="@ExpiryDate" />

    <button @onclick="SubmitForm">Submit</button>
    <p role="status">Current count: @Successmessage</p>

</form>
@code {
    private string CardHolderName { get; set; }
    private string CardNumber { get; set; }
    private string ExpiryDate { get; set; }
    private string Successmessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        httpClient.BaseAddress = new Uri("http://localhost:5132"); 
        await base.OnInitializedAsync();
    }
    private async Task SubmitForm()
    {
        var formData = new FormUrlEncodedContent(new Dictionary<string, string>
        {
            { "CardHolderName", CardHolderName },
            { "CardNumber", CardNumber },
            { "ExpiryDate", ExpiryDate }
        });

        
            try
            {
                var response = await httpClient.PostAsync("/card/submit", formData);
                Logger.LogInformation("Sending HTTP request to /card/submit");
                if (response.IsSuccessStatusCode)
                {
                    Successmessage = "Submitted Successfully";
                }
                else
                {
                    Successmessage = "Submission Failed";
                }
            }
            catch (Exception ex)
            {
                Successmessage = $"Error: {ex.Message}";
            }
        
    }
}